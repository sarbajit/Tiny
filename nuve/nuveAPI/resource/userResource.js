var roomRegistry=require("./../mdb/roomRegistry"),serviceRegistry=require("./../mdb/serviceRegistry"),cloudHandler=require("../cloudHandler"),logger=require("./../logger").logger,log=logger.getLogger("UserResource"),currentService,currentRoom,doInit=function(e,r){"use strict";currentService=require("./../auth/nuveAuthenticator").service,serviceRegistry.getRoomForService(e,currentService,function(e){currentRoom=e,r()})};exports.getUser=function(e,r){"use strict";doInit(e.params.room,function(){if(void 0===currentService)return void r.status(404).send("Service not found");if(void 0===currentRoom)return log.info("Room ",e.params.room," does not exist"),void r.status(404).send("Room does not exist");var o=e.params.user;cloudHandler.getUsersInRoom(currentRoom._id,function(t){if("error"===t)return void r.status(401).send("CloudHandler does not respond");for(var s in t)if(t[s].name===o)return log.info("Found user",o),void r.send(t[s]);log.error("User",e.params.user,"does not exist"),r.status(404).send("User does not exist")})})},exports.deleteUser=function(e,r){"use strict";doInit(e.params.room,function(){if(void 0===currentService)return void r.status(404).send("Service not found");if(void 0===currentRoom)return log.info("Room ",e.params.room," does not exist"),void r.status(404).send("Room does not exist");var o=e.params.user;cloudHandler.deleteUser(o,currentRoom._id,function(e){return"User does not exist"!==e?void r.send(e):void r.status(404).send(e)})})};