var db=require("./dataBase").db,logger=require("./../logger").logger,log=logger.getLogger("TokenRegistry"),getList=exports.getList=function(o){"use strict";db.tokens.find({}).toArray(function(e,n){e||!n?log.info("Empty list"):o(n)})},getToken=exports.getToken=function(o,e){"use strict";db.tokens.findOne({_id:db.ObjectId(o)},function(n,t){null==t&&(t=void 0,log.info("Token ",o," not found")),void 0!==e&&e(t)})},hasToken=exports.hasToken=function(o,e){"use strict";getToken(o,function(o){e(void 0===o?!1:!0)})};exports.addToken=function(o,e){"use strict";db.tokens.save(o,function(o,n){o&&log.info("MongoDB: Error adding token: ",o),e(n._id)})};var removeToken=exports.removeToken=function(o,e){"use strict";getToken(o,function(n){n?db.tokens.remove({_id:db.ObjectId(o)},function(o,t){return o?(log.error("MongoDB: Error removing token: ",o),e("removing token error",null)):void(1===t.n?e(null,n):e("token already removed",null))}):e("no such token",null)})};exports.updateToken=function(o){"use strict";db.tokens.save(o,function(o,e){o&&log.info("MongoDB: Error updating token: ",o)})},exports.removeOldTokens=function(){"use strict";var o,e,n,t,r;db.tokens.find({use:{$exists:!1}}).toArray(function(i,s){if(i||!s);else for(o in s)e=s[o],n=(new Date).getTime(),t=e.creationDate.getTime(),r=n-t,r>18e4&&(log.info("Removing old token ",e._id,"from room ",e.room," of service ",e.service),removeToken(e._id+"",function(){}))})};